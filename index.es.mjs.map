{"version":3,"file":"index.es.mjs","sources":["index.js"],"sourcesContent":["export default (config, options) => {\n\t// find any first matching rule that contains postcss-loader\n\tfilterPostCSSLoader(config.module.rules).forEach(rule => {\n\t\tfilterPostCSSLoader(rule.oneOf).forEach(oneOf => {\n\t\t\tfilterPostCSSLoader(oneOf.use || oneOf.loader).forEach(use => {\n\t\t\t\t// use the latest version of postcss-loader\n\t\t\t\tuse.loader = require.resolve('postcss-loader');\n\n\t\t\t\t// conditionally replace options with a custom configuration\n\t\t\t\tuse.options = options ? options : use.options;\n\t\t\t})\n\t\t})\n\t});\n\n\t// return the mutated configuration\n\treturn config;\n};\n\n// return a filtered array that includes postcss-loader\nconst filterPostCSSLoader = array => array.filter(object => JSON.stringify(object).includes('postcss-loader'));\n"],"names":[],"mappings":"AAAA,YAAe,CAAC,MAAM,EAAE,OAAO,KAAK;;CAEnC,mBAAmB,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,IAAI,IAAI;EACxD,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI;GAChD,mBAAmB,CAAC,KAAK,CAAC,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,GAAG,IAAI;;IAE7D,GAAG,CAAC,MAAM,GAAG,OAAO,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;;;IAG/C,GAAG,CAAC,OAAO,GAAG,OAAO,GAAG,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;IAC9C,EAAC;GACF,EAAC;EACF,CAAC,CAAC;;;CAGH,OAAO,MAAM,CAAC;CACd,CAAC;;;AAGF,MAAM,mBAAmB,GAAG,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,CAAC;;;;"}